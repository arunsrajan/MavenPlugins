package $packageName;

import org.codehaus.jackson.annotate.JsonCreator;
import org.codehaus.jackson.annotate.JsonValue;
#if ($name.endsWith("__c"))
#set($className = $objectName+"_"+$name.replace("__c","")+"CustomEnum")
#else
#set($className = $objectName+"_"+$name+"Enum")
#end
public enum $className {
		#if($pickListValues)
			#foreach ( $pickListValue in $pickListValues )
				#set($fieldName = $pickListValue.replaceAll(" ","_").replaceAll("[^A-Za-z0-9]","_"))
				#set($fieldName = $fieldName.toUpperCase())
				#if($foreach.count < $size)
					_$fieldName ("$pickListValue"),
				#else
					_$fieldName ("$pickListValue");				
				#end
			#end
		#end
		#if(!$pickListValues)
			NULL("NULL");
		#end
		final String value;

	    private $className(String value) {
	        this.value = value;
	    }
	
	    @JsonValue
	    public String value() {
	        return this.value;
	    }
	    @JsonCreator
    	public static $className fromValue(String value) {
	        for ($className e : $className .values()) {
	            if (e.value.equals(value)) {
	                return e;
	            }
	        }
	        throw new IllegalArgumentException(value);
    	}
}
